
Memory Configuration

Name             Origin             Length             Attributes
CCMRAM           0x10000000         0x00010000         xrw
RAM              0x20000000         0x00020000         xrw
FLASH            0x08000000         0x00100000         xr
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD main.o
LOAD stm32f407xx_gpio_drivers.o
LOAD stm32_startup.o
                0x20020000                _estack = (ORIGIN (RAM) + LENGTH (RAM))
                0x00000200                _Min_Heap_Size = 0x200
                0x00000400                _Min_Stack_Size = 0x400

.isr_vector     0x08000000      0x188
                0x08000000                . = ALIGN (0x4)
 *(.isr_vector)
 .isr_vector    0x08000000      0x188 stm32_startup.o
                0x08000000                vectors
                0x08000188                . = ALIGN (0x4)

.text           0x08000188      0xc90
                0x08000188                . = ALIGN (0x4)
 *(.text)
 .text          0x08000188      0x2f4 main.o
                0x08000188                GPIO_Led_Initialize
                0x080001c8                Toggle_All_LED
                0x080001f4                Reset_All_LED
                0x08000228                Led_State_Machine
                0x080002f8                main
                0x08000440                EXTI0_IRQHandler
 .text          0x0800047c      0x910 stm32f407xx_gpio_drivers.o
                0x0800047c                GPIO_PeriClockControl
                0x0800064c                GPIO_Init
                0x08000984                GPIO_DeInit
                0x08000af0                GPIO_ReadFromInputPin
                0x08000b1a                GPIO_ReadFromInputPort
                0x08000b34                GPIO_WriteToOutputPin
                0x08000b7c                GPIO_WriteToOutputPort
                0x08000b98                GPIO_ToggleOutputPin
                0x08000bc0                GPIO_IRQInterruptConfig
                0x08000cc8                GPIO_IRQHandling
                0x08000d08                GPIO_IRQPriorityConfig
                0x08000d5a                delay
 .text          0x08000d8c       0x8c stm32_startup.o
                0x08000d8c                RTC_Alarm_IRQHandler
                0x08000d8c                HASH_RNG_IRQHandler
                0x08000d8c                EXTI2_IRQHandler
                0x08000d8c                TIM8_CC_IRQHandler
                0x08000d8c                DebugMon_Handler
                0x08000d8c                TIM1_CC_IRQHandler
                0x08000d8c                DMA2_Stream5_IRQHandler
                0x08000d8c                HardFault_Handler
                0x08000d8c                DMA1_Stream5_IRQHandler
                0x08000d8c                SysTick_Handler
                0x08000d8c                PVD_IRQHandler
                0x08000d8c                SDIO_IRQHandler
                0x08000d8c                TAMP_STAMP_IRQHandler
                0x08000d8c                PendSV_Handler
                0x08000d8c                NMI_Handler
                0x08000d8c                CAN2_RX1_IRQHandler
                0x08000d8c                EXTI3_IRQHandler
                0x08000d8c                TIM8_TRG_COM_TIM14_IRQHandler
                0x08000d8c                TIM1_UP_TIM10_IRQHandler
                0x08000d8c                TIM8_UP_TIM13_IRQHandler
                0x08000d8c                I2C3_ER_IRQHandler
                0x08000d8c                I2C2_EV_IRQHandler
                0x08000d8c                DMA1_Stream2_IRQHandler
                0x08000d8c                CAN1_RX0_IRQHandler
                0x08000d8c                FPU_IRQHandler
                0x08000d8c                OTG_HS_WKUP_IRQHandler
                0x08000d8c                UsageFault_Handler
                0x08000d8c                CAN2_SCE_IRQHandler
                0x08000d8c                DMA2_Stream2_IRQHandler
                0x08000d8c                SPI1_IRQHandler
                0x08000d8c                TIM6_DAC_IRQHandler
                0x08000d8c                TIM1_BRK_TIM9_IRQHandler
                0x08000d8c                DCMI_IRQHandler
                0x08000d8c                CAN2_RX0_IRQHandler
                0x08000d8c                DMA2_Stream3_IRQHandler
                0x08000d8c                USART6_IRQHandler
                0x08000d8c                USART3_IRQHandler
                0x08000d8c                CRYP_IRQHandler
                0x08000d8c                DMA2_Stream6_IRQHandler
                0x08000d8c                CAN1_RX1_IRQHandler
                0x08000d8c                UART5_IRQHandler
                0x08000d8c                DMA2_Stream0_IRQHandler
                0x08000d8c                TIM4_IRQHandler
                0x08000d8c                I2C1_EV_IRQHandler
                0x08000d8c                DMA1_Stream6_IRQHandler
                0x08000d8c                DMA1_Stream1_IRQHandler
                0x08000d8c                UART4_IRQHandler
                0x08000d8c                TIM3_IRQHandler
                0x08000d8c                RCC_IRQHandler
                0x08000d8c                TIM8_BRK_TIM12_IRQHandler
                0x08000d8c                Default_Handler
                0x08000d8c                EXTI15_10_IRQHandler
                0x08000d8c                ADC_IRQHandler
                0x08000d8c                DMA1_Stream7_IRQHandler
                0x08000d8c                TIM7_IRQHandler
                0x08000d8c                CAN2_TX_IRQHandler
                0x08000d8c                TIM5_IRQHandler
                0x08000d8c                DMA2_Stream7_IRQHandler
                0x08000d8c                I2C3_EV_IRQHandler
                0x08000d8c                EXTI9_5_IRQHandler
                0x08000d8c                RTC_WKUP_IRQHandler
                0x08000d8c                ETH_WKUP_IRQHandler
                0x08000d8c                SPI2_IRQHandler
                0x08000d8c                OTG_HS_EP1_IN_IRQHandler
                0x08000d8c                MemManage_Handler
                0x08000d8c                DMA1_Stream0_IRQHandler
                0x08000d8c                CAN1_TX_IRQHandler
                0x08000d8c                SVC_Handler
                0x08000d8c                EXTI4_IRQHandler
                0x08000d8c                FSMC_IRQHandler
                0x08000d8c                ETH_IRQHandler
                0x08000d8c                OTG_HS_EP1_OUT_IRQHandler
                0x08000d8c                WWDG_IRQHandler
                0x08000d8c                TIM2_IRQHandler
                0x08000d8c                OTG_FS_WKUP_IRQHandler
                0x08000d8c                TIM1_TRG_COM_TIM11_IRQHandler
                0x08000d8c                OTG_HS_IRQHandler
                0x08000d8c                EXTI1_IRQHandler
                0x08000d8c                USART2_IRQHandler
                0x08000d8c                I2C2_ER_IRQHandler
                0x08000d8c                DMA2_Stream1_IRQHandler
                0x08000d8c                CAN1_SCE_IRQHandler
                0x08000d8c                DMA2_Stream4_IRQHandler
                0x08000d8c                BusFault_Handler
                0x08000d8c                USART1_IRQHandler
                0x08000d8c                OTG_FS_IRQHandler
                0x08000d8c                SPI3_IRQHandler
                0x08000d8c                DMA1_Stream4_IRQHandler
                0x08000d8c                I2C1_ER_IRQHandler
                0x08000d8c                DMA1_Stream3_IRQHandler
                0x08000d92                Reset_Handler
 *(.text*)
 *(.glue_7)
 .glue_7        0x08000e18        0x0 linker stubs
 *(.glue_7t)
 .glue_7t       0x08000e18        0x0 linker stubs
 *(.eh_frame)
 *(.init)
 *(.fini)
                0x08000e18                . = ALIGN (0x4)
                0x08000e18                _etext = .

.vfp11_veneer   0x08000e18        0x0
 .vfp11_veneer  0x08000e18        0x0 linker stubs

.v4_bx          0x08000e18        0x0
 .v4_bx         0x08000e18        0x0 linker stubs

.iplt           0x08000e18        0x0
 .iplt          0x08000e18        0x0 main.o

.rel.dyn        0x08000e18        0x0
 .rel.iplt      0x08000e18        0x0 main.o

.rodata         0x08000e18        0x0
                0x08000e18                . = ALIGN (0x4)
 *(.rodata)
 *(.rodata*)
                0x08000e18                . = ALIGN (0x4)

.ARM.extab      0x08000e18        0x0
                0x08000e18                . = ALIGN (0x4)
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x08000e18                . = ALIGN (0x4)

.ARM            0x08000e18        0x0
                0x08000e18                . = ALIGN (0x4)
                0x08000e18                __exidx_start = .
 *(.ARM.exidx*)
                0x08000e18                __exidx_end = .
                0x08000e18                . = ALIGN (0x4)

.preinit_array  0x08000e18        0x0
                0x08000e18                . = ALIGN (0x4)
                [!provide]                PROVIDE (__preinit_array_start = .)
 *(.preinit_array*)
                [!provide]                PROVIDE (__preinit_array_end = .)
                0x08000e18                . = ALIGN (0x4)

.init_array     0x08000e18        0x0
                0x08000e18                . = ALIGN (0x4)
                [!provide]                PROVIDE (__init_array_start = .)
 *(SORT_BY_NAME(.init_array.*))
 *(.init_array*)
                [!provide]                PROVIDE (__init_array_end = .)
                0x08000e18                . = ALIGN (0x4)

.fini_array     0x08000e18        0x0
                0x08000e18                . = ALIGN (0x4)
                [!provide]                PROVIDE (__fini_array_start = .)
 *(SORT_BY_NAME(.fini_array.*))
 *(.fini_array*)
                [!provide]                PROVIDE (__fini_array_end = .)
                0x08000e18                . = ALIGN (0x4)
                0x08000e18                _sidata = LOADADDR (.data)

.data           0x20000000        0x0 load address 0x08000e18
                0x20000000                . = ALIGN (0x4)
                0x20000000                _sdata = .
 *(.data)
 .data          0x20000000        0x0 main.o
 .data          0x20000000        0x0 stm32f407xx_gpio_drivers.o
 .data          0x20000000        0x0 stm32_startup.o
 *(.data*)
 *(.RamFunc)
 *(.RamFunc*)
                0x20000000                . = ALIGN (0x4)
                0x20000000                _edata = .
                0x08000e18                _siccmram = LOADADDR (.ccmram)

.igot.plt       0x20000000        0x0 load address 0x08000e18
 .igot.plt      0x20000000        0x0 main.o

.ccmram         0x10000000        0x0 load address 0x08000e18
                0x10000000                . = ALIGN (0x4)
                0x10000000                _sccmram = .
 *(.ccmram)
 *(.ccmram*)
                0x10000000                . = ALIGN (0x4)
                0x10000000                _eccmram = .
                0x10000000                . = ALIGN (0x4)

.bss            0x20000000        0x4
                0x20000000                _sbss = .
                0x20000000                __bss_start__ = _sbss
 *(.bss)
 .bss           0x20000000        0x2 main.o
                0x20000000                Interrupt_flag
                0x20000001                Interrupt_count
 .bss           0x20000002        0x0 stm32f407xx_gpio_drivers.o
 .bss           0x20000002        0x0 stm32_startup.o
 *(.bss*)
 *(COMMON)
                0x20000004                . = ALIGN (0x4)
 *fill*         0x20000002        0x2 
                0x20000004                _ebss = .
                0x20000004                __bss_end__ = _ebss

._user_heap_stack
                0x20000004      0x604
                0x20000008                . = ALIGN (0x8)
 *fill*         0x20000004        0x4 
                [!provide]                PROVIDE (end = .)
                [!provide]                PROVIDE (_end = .)
                0x20000208                . = (. + _Min_Heap_Size)
 *fill*         0x20000008      0x200 
                0x20000608                . = (. + _Min_Stack_Size)
 *fill*         0x20000208      0x400 
                0x20000608                . = ALIGN (0x8)

/DISCARD/
 libc.a(*)
 libm.a(*)
 libgcc.a(*)

.ARM.attributes
                0x00000000       0x2e
 *(.ARM.attributes)
 .ARM.attributes
                0x00000000       0x2e main.o
 .ARM.attributes
                0x0000002e       0x2e stm32f407xx_gpio_drivers.o
 .ARM.attributes
                0x0000005c       0x2e stm32_startup.o
OUTPUT(finalled.elf elf32-littlearm)
LOAD linker stubs
LOAD c:/program files (x86)/gnu arm embedded toolchain/10 2021.07/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib\libc.a
LOAD c:/program files (x86)/gnu arm embedded toolchain/10 2021.07/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib\libm.a
LOAD c:/program files (x86)/gnu arm embedded toolchain/10 2021.07/bin/../lib/gcc/arm-none-eabi/10.3.1\libgcc.a

.comment        0x00000000       0x49
 .comment       0x00000000       0x49 main.o
                                 0x4a (size before relaxing)
 .comment       0x00000049       0x4a stm32f407xx_gpio_drivers.o
 .comment       0x00000049       0x4a stm32_startup.o
